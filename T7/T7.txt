---------------------------------------------------------
[T7] 第6章 配列(2) に関する考察・感想用テンプレート
---------------------------------------------------------

課題： T7
学生番号： 
氏名： 
作成日： 


（注意）【以下は確認の上，消去してからレポート提出を行って下さい】
  ・ プログラミングの力がつかないため，他の学生・先輩などが作成したプ
       ログラムをコピーすることは厳禁です．

  ・ 各課題に対して，
      - 学習内容（どのようなプログラムを作成したか，この課題を通して学んだ事項，
           作成中に間違えた箇所，など）
      - 結果（結果を報告する．実行結果も貼り付けよ）
      - 習得した内容，苦労した点，工夫した点，考察など
     について必ず記すこと．

  ・ プログラムが完成次第，1問ごとにその都度以下のレポート欄に
       記入して下さい．あとからまとめて記そうとすると，書くべき事項を
       忘れることが多くあります．

-----------------------------------------------
(T7_1)

学習内容：
下のプログラムは，6 種類の硬貨（1円, 5円, 10円, 50円, 100円, 500円）についてそれぞれの枚数を入力し，金額の合計を表示するプログラムである．以下に沿うように完成せよ．

関数 array_input で 6 個の負でない整数を受け取り，配列 a の要素として順に格納する．これらはそれぞれ 1円, 5円, 10円, 50円, 100円, 500円玉の枚数とする．その結果，これらの数値は main 関数では配列 num の要素として参照できる．
関数 array_print にて，6種類の硬貨の額面と枚数を表示する．
関数 array_sum にて，硬貨の金額の合計を計算して戻り値とする．

※ 関数の引数に配列を使う方法は教科書 7章および 8章で扱われる．ここでは，引数となっている配列は関数の中で main 関数の中と同様に使用できると考えて解答すればよい． 
出力結果の例：
1円が 3枚
5円が 2枚
10円が 0枚
50円が 5枚
100円が 3枚
500円が 1枚

合計は 1063円です．
#include <stdio.h>

#define N 6

/* プロトタイプ宣言，配列の引数の書き方に注意 */
void array_input( int a[] );
void array_print( int a[], int b[] );
int array_sum( int a[], int b[] );

int main ( void )
{
	int value[ N ] = { 1, 5, 10, 50, 100, 500 };
	int num[ N ];
	int sum;

	printf("枚数の入力\n ");
	array_input( num );

	printf(" 硬貨の額面，枚数\n ");
	array_print( value, num );

	sum = array_sum( value, num );
	printf(" 硬貨の合計金額は %d 円です\n ", sum);

	return 0;
}

void array_input( int a[] )  /* 入力を行う関数の本体 */
{
	int i;
	for ( i = 0; i < N; i++ ) 
	{
		printf(" %d 番目 > ", i+1);
		scanf("%d", &a[i]);
	}
}

void array_print( int a[], int b[] )  /* 表示を行う関数の本体 */
{
  /* 金額と枚数を順に出力する */
}

int array_sum( int a[], int b[] )     /* 合計を求める関数の本体 */
{
  /* 合計金額を求めて戻り値とする */
}

結果：
枚数の入力
 1 番目 > 1
 2 番目 > 2
 3 番目 > 3
 4 番目 > 4
 5 番目 > 5
 6 番目 > 6
 硬貨の額面，枚数
  1 円が 1 枚 5 円が 2 枚 10 円が 3 枚 50 円が 4 枚 100 円が 5 枚 500 円が 6 枚 硬貨の合計金額は 3741 円です

習得した内容・反省・考察など：
入力された硬貨の数とその和を求めて出力することができた。

-----------------------------------------------
(T7_2) 

学習内容：
キーボードから 0 以上 9 以下の数字を7個受け取り，それぞれの数字が入力された回数を配列に格納して表示するプログラムを作成する．

マクロ定数 N を 10 として定義する．
要素数 N の int 型配列 freq を定義し，その for 文を用いてすべての要素を 0 で初期化する．
なお，以下では freq[ i ] には，整数 i が入力された回数を格納する．
for 文を用いて以下を 7 回繰り返す:
キーボードから0以上9以下の整数を1個受け取り，int 型の変数 a に代入する．
freq[ a ] をインクリメントする．
（キーボードから1個の数字を受け取る度に，freq の全要素を表示することでその変化を観察することを勧めます → 下記の最終的な表示と異なり，1行で全要素を表示するとよい）
1, 7, 2, 7, 7, 5, 2 が順に入力された場合の表示例は以下の通り：
0 は 0 個
1 は 1 個
2 は 2 個
3 は 0 個
4 は 0 個
5 は 1 個
6 は 0 個
7 は 3 個
8 は 0 個
9 は 0 個

結果：
1から9までの数字を入力してください>>>1
1から9までの数字を入力してください>>>3
1から9までの数字を入力してください>>>4
1から9までの数字を入力してください>>>1
1から9までの数字を入力してください>>>5
1から9までの数字を入力してください>>>1
1から9までの数字を入力してください>>>3
0 は 0 個
1 は 3 個
2 は 0 個
3 は 2 個
4 は 1 個
5 は 1 個
6 は 0 個
7 は 0 個
8 は 0 個
9 は 0 個

習得した内容・反省・考察など：
入力された数字の個数を求めて、それを出力することができた。入力された数字をaに代入し、freq[a]をインクリメントすることでうまく描写することができた。

-----------------------------------------------
(T7_3) 

学習内容：
以下のプログラムを読み，出力を予想してレポートに記せ．次に，プログラムを入力，コンパイル・実行して結果を確認せよ．予想が間違った場合はその理由をレポートにて報告すること．

#include <stdio.h>

#define M 3


int main ( void )
{
	double a[ M ][ M ];
	int i, j;
	double sum;

	a[0][0] =  2.5; a[0][1] =  0.0; a[0][2] = -1.0;
	a[1][0] = -1.0; a[1][1] =  1.5; a[1][2] =  0.0;
	a[2][0] =  5.0; a[2][1] =  4.0; a[2][2] =  3.0;

	sum = 0.0;
	for( i = 0; i < M; i++ )
		sum += a[ 1 ][ i ];

	printf("%f \n", sum );

	sum = 0.0;
	for( i = 0; i < M; i++ )
		sum += a[ i ][ 2 ];

	printf("%f \n", sum );

	sum = 0.0;
	for( i = 0; i < M; i++ ){
		for( j = 0; j < M; j++ ){
			sum += a[ i ][ j ];
		}
	}
	printf("%f \n", sum );

	return 0;
}

結果：
0.500000 
2.000000 
14.00000

習得した内容・反省・考察など：
ひとつ目のsumでは後ろの値を0から2まで変化させていたため、-1.0+1.5.+0.0を計算していると推測した。同様に、二つ目は-1.0+0.0+3.0が計算されると予想した。また、三つ目のものは全ての要素を足し合わせていると予想した。結果、予想は正しかった。

-----------------------------------------------
(T7_4) 

学習内容：
以下のプログラムを入力した上で，2次元配列を表示するプログラムを完成せよ．

2次元配列 a を引数とし，a の要素を 2重の for 文を用いて表示する関数 void print_array( double a[][]) を作成する．printf の書式は %5.1f とする
main 関数から print_array を呼び出し，正しく表示されることを確認する．
#include <stdio.h>

#define M 3

void print_array( double a[][] ){
        int i, j;

        for( i = 0; i < M; i++ ){
                for( j = 0; j < M; j++ ){
                         // a[i][j] を表示, 書式は %5.1f とする
                         // 1個の数字を表示するごとにスペースを入れておくこと
                }
                // 改行
        }
}

int main ( void )
{
	double a[ M ][ M ];

	a[0][0] =  2.5; a[0][1] =  0.0; a[0][2] = -1.0;
	a[1][0] = -1.0; a[1][1] =  1.5; a[1][2] =  0.0;
	a[2][0] =  5.0; a[2][1] =  4.0; a[2][2] =  3.0;

        print_array( a );

	return 0;
}

結果：
2.5   0.0  -1.0 
-1.0   1.5   0.0 
 5.0   4.0   3.0 

習得した内容・反省・考察など：
二次元配列を作成することができた。配列を描写する時には、for文を使うことを忘れないようにしたい。

-----------------------------------------------
(T7_5) 

学習内容：
プログラム内で初期化された 3×3 行列 A および B に対し，C = A + B を求めて表示するプログラムを[リスト 6.12]を参考にして作成せよ．ただし，表示の際は既に作成した関数 void print_array( double a[M][M] ) を用いること． 
さらにこれを修正し，C = 3A + 2B となる C を計算して表示するプログラムを作成せよ（こちらを提出せよ）． 
なお，行列 A, B，Cはプログラム内でそれぞれ2次元配列 a, b, c で表されるものとする．

次の結果が得られることを確認せよ.
      3.5   9.0  -1.0
      5.0  -1.5   5.0
     10.0  12.0   5.0
 
#include <stdio.h>

#define M 3

void print_array( double a[][] ){
        // 別の問題で作成した print_array 関数をここに写す
}


int main ( void )
{
	double a[ M ][ M ], b[ M ][ M ], c[ M ][ M ];
	int i, j;

	a[0][0] =  2.5; a[0][1] =  0.0; a[0][2] = -1.0;
	a[1][0] = -1.0; a[1][1] =  1.5; a[1][2] =  0.0;
	a[2][0] =  5.0; a[2][1] =  4.0; a[2][2] =  3.0;

	b[0][0] = -2.0; b[0][1] =  4.5; b[0][2] =  1.0;
	b[1][0] =  4.0; b[1][1] = -3.0; b[1][2] =  2.5;
	b[2][0] = -2.5; b[2][1] =  0.0; b[2][2] = -2.0;

	// ここで行列の和を求める

	// ここで関数 print_array を呼び出して c を表示する

	return 0;
}

結果：
3.5   9.0  -1.0 
  5.0  -1.5   5.0 
 10.0  12.0   5.0 

習得した内容・反省・考察など：
3X3の正方行列を描写することができた。数列同士の計算も時に問題なく計算することができたので、この調子で配列をどんどん使っていきたい。

-----------------------------------------------
(T7_6) 

学習内容：
正方行列のトレースとフロベニウスノルムを計算するプログラムを完成せよ．

M 次正方行列 A のトレースを計算して表示する．ただし，正方行列 A のトレースとは，その対角成分の和であり，a[ i ] [ i ] を for文を用いて足し合わせることで計算できる．
行列 A のフロベニウスノルムを計算して表示する．ただし，フロベニウスノルムとは，全成分の 2 乗和の平方根として定義される．このため，a[ i ][ j ] * a[ i ][ j ] をすべてのi,jの組み合わせに対して2重の for文を用いて足し合わせた上で，平方根を求めればよい（平方根は教科書表4.8を参照）．
プログラム内で与えられた行列 A について，トレースは 7.0，フロベニウスノルムは約 7.78 である．
#include <stdio.h>

#define M 3

int main ( void )
{
	double a[ M ][ M ];
	int i, j;

	a[0][0] =  2.5; a[0][1] =  0.0; a[0][2] = -1.0;
	a[1][0] = -1.0; a[1][1] =  1.5; a[1][2] =  0.0;
	a[2][0] =  5.0; a[2][1] =  4.0; a[2][2] =  3.0;

	/* ここで行列のトレースを求める */

	/* ここで行列のフロベニウスノルムを求める */

	/* トレースとフロベニウスノルムを表示する */

	return 0;
}

結果：
7
7.778175

習得した内容・反省・考察など：
トレースとフロべノウスノルムを求めることができた。両方とも名前すら知らない要素であったため、もう一度復習しておきたい。

-----------------------------------------------
[T7] 全体に対する感想などを以下に記すこと．
所要時間： （1）時間
今日の課題では、配列と関数について勉強した。配列を使って関数を使うやり方を勉強したが、関数と配列はプログラミングをする上でも非常に重要だと思うので、両方とも使いこなせるように勉強していきたい。



