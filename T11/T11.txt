---------------------------------------------------------
[T11] 第9章 構造体とユーザ定義型 に関する考察・感想用テンプレート
---------------------------------------------------------

課題： T11
学生番号： 
氏名： 
作成日： 


（注意）【以下は確認の上，消去してからレポート提出を行って下さい】
  ・ プログラミングの力がつかないため，他の学生・先輩などが作成したプ
       ログラムをコピーすることは厳禁です．

  ・ 各課題に対して，
      - 学習内容（どのようなプログラムを作成したか，この課題を通して学んだ事項，
           作成中に間違えた箇所，など）
      - 結果（結果を報告する．実行結果も貼り付けよ）
      - 習得した内容，苦労した点，工夫した点，考察など
     について必ず記すこと．

  ・ プログラムが完成次第，1問ごとにその都度以下のレポート欄に
       記入して下さい．あとからまとめて記そうとすると，書くべき事項を
       忘れることが多くあります．

-----------------------------------------------
(T11_1)

学習内容：
[リスト 9.1] を入力し，コンパイル・実行せよ．その上で，上で記した注意に従ってプログラムを書き替えてコン

結果：
NAME         BIRTHDAY   ZIP      ADDRESS                      TEL
Hinako       19890225   1234567  Yokohama-shi Kanagawa Pref.  045-123-4567

習得した内容・反省・考察など：
構造体の定義の仕方、また構造体へのデータの代入の仕方を勉強することができた。

-----------------------------------------------
(T11_2) 

学習内容：
 次の手順に沿ってプログラムを完成せよ．

main( ) の外部に，次のメンバを持つ構造体 struct date を宣言せよ．(宣言を int main(void) より前に書く)
int y; … 年を表す整数
int m; … 月を表す整数
int d; … 日を表す整数
main( ) の内部に struct date 型の構造体変数 my_day を宣言せよ．(宣言を
int main(void)
{
	...
}
の中括弧の内側に書く，構造体変数を宣言する記述法については教科書 9.1.2項 をよく読むこと)
今日の日付など好きな日にあわせて，my_day の各メンバに値を代入せよ．
引数として受け取った struct date 型の構造体変数の内容を，例えば「今日は，2023年 6月20日です．」という形式で表示するように，関数void print_day( struct date hiduke ) を完成せよ．この関数は，struct date 型の hiduke という構造体変数を引数として受け取る．
今回の演習では，簡単のため「月」を表す変数は 1～12までの値をとることとする． なお，「1月は0，2月は1，…」と扱うプログラミング言語もあるので注意．
#include <stdio.h>

  /* ここで構造体を宣言せよ */

void print_day( struct date hiduke ){

  /* ここにプログラムを追加せよ */

  /*  printf( "%d \n", hiduke.y ); */

}

int main(void)
{

  /* ここにプログラムを追加せよ */

  print_day( my_day );

  return 0;
}

結果：
2023年、6月20日

習得した内容・反省・考察など：
前回に引き続いて、構造体の使い方を勉強することができた。数値を代入するときには、そのまま代入することができることがわかった。

-----------------------------------------------
(T11_3) 

学習内容：
次の手順に沿ってプログラムを作成せよ．

main( ) の外部に， 次の 5 つのメンバを持つ struct jugyo 型の構造体 を宣言せよ．
char dow[4]; … 曜日（day of week）, Mon/Tue/Wed/Thu/Fri のいずれかに続いて "\0" を代入
int tp; … 時限（time period）
char subject[30]; … 授業名，文字列の後に "\0" の代入を忘れないこと
int build; … 建物(号館)
int room; … 教室
main( ) の内部に struct jugyo 型の構造体変数 my_class と your_class を宣言せよ．
自身が履修する授業のいずれかについて，データを my_class にセットせよ
授業名は英語で記すこと．
文字配列への代入には 「文字列」の授業（教科書7.2.3項）にて学んだ strcpy( ) を使う．strcpy( 文字列変数名, "代入する文字列" );
あくまで例として，Mon/2/Information Theory/6/201 を挙げておく．
struct jugyo 型の構造体変数を引数として受け取り，そのメンバを表示する関数 void print_class(struct jugyo a) を完成せよ．この関数は，struct jugyo 型の構造体変数 a を引数として受け取る．
print_class() 関数に構造体変数 my_class を引数として渡すことで，その内容を表示せよ．
構造体の代入「your_class = my_class;」を行った後，your_class の内容を print_class() 関数を用いて表示せよ．構造体変数の各メンバに対して何が起こっているか考察せよ．

結果：
日:Mon
時限:2
授業名:Infomation Theory
号館:6
実施教室:201

曜日:Mon
時限:2
授業名:Infomation Theory
号館:6
実施教室:201

習得した内容・反省・考察など：
構造体の各メンバがコピーされm結果的に同じものが出力されている、

-----------------------------------------------
(T11_4) 

学習内容：
[リスト 6.14]ではもっとも離れた席の組を探すプログラムを扱ったが，[リスト 9.5] はそれを構造体の配列を用いて書いたプログラムである．[リスト9.5]を入力せよ．さらに，以下の変更を施した上でコンパイル・実行せよ．

[T11] の冒頭に示された「構造体の宣言」と「構造体変数の宣言」に関する注意事項に従って書き換える．
座席のデータは表6.4（p. 258）のものを使用することとし，プログラム内で構造体変数（配列）の定義と初期化を以下に示す通りに行う．
キーボードから値を受け取る行は削除する．
課題ページからリンクされた教科書の正誤表にあるとおり，for 文の "j = 0" は "j = i+1" とする方が適当と考えられる．この点を変更せよ．
その上で，もっとも近い席の組を探すプログラムに書き換えて提出せよ．
 struct seat_position seat[MAX_SEAT] = {
    {  1, 1.1, 5.2 },
    {  5, 3.4, 1.6 },
    {  8, 4.5, 3.4 },
    { 10, 2.3, 2.6 },
    { 15, 6.4, 5.7 },
    { 16, 7.6, 7.8 },
    { 20, 5.2, 4.4 },
    { 22, 1.7, 3.5 },
    { 25, 3.8, 6.3 },
    { 30, 5.8, 6.3 },
};

結果：
最も離れた座席は 5 と 16 です (距離 7.488658)

習得した内容・反省・考察など：
与えられたデータの座席の中で、最も鼻らたものを求めることができた。構造体の定義はmain関数の外で行うことを忘れないようにしたい。

-----------------------------------------------
(T11_5) 

学習内容：
教科書 9.5.1項にて説明されている typedef は，既存のデータ型（int など）に 対して別名をつける機能をもつ．教科書 pp. 340～341 で挙げられているように，

typedef int language_t;
とすることで，ユーザは language_t という新しい型を定義することができる．また，
language_t selected;
とすることで，language_t 型の変数 selected が宣言される．ただし，language_t 型は実は int 型 に他ならないため，
int selected;
としてもプログラムの動作に何らの変化はない．とはいえ，p. 340のサンプルプログラムでは， language_t 型の変数は「0 または 1 以外の値をとらない変数（かつそれが言語を表す）」であることが明確に意識できるという利点がある． 以下のプログラムを作成せよ（注： 本問は typedef の習得を目的としており，構造体は扱うわけではない）． 
試験の点数を扱うための変数の型として score_t 型を定義せよ．ただし，その実体は unsigned int 型 であるとする．（教科書 pp. 340～341 に記される通り，typedefで作る型名は *_t の ようにすることが多い）
score_t 型の変数 english と math を宣言せよ．
キーボードから，2個の 0以上の整数を入力させ，それぞれ english と math に 代入する．
もし english の値が100を超えている場合 は「英語の点数に誤りがあります」と表示する．math についても同様に範囲を 超えた数値である場合は「数学の点数に誤りがあります」と表示する．
いずれにも該当しない場合は，それらの合計を計算し， 「英語と数学の点数の合計は？？点です．」と表示する．
レポートで，unsigned int 型とはどのような型であるか，説明せよ．教科書3.1.3項に説明がある． 

結果：
英語と数学の点数を入力してください>>>114514 810
英語の点数に誤りがあります
数学の点数に誤りがあります

英語と数学の点数を入力してください>>>45 72
2科目の合計点は、117点です。

習得した内容・反省・考察など：
unsigned int 型とは、符号がない整数型、つまり0以上の整数型の変数を意味する。

-----------------------------------------------
[T11] 全体に対する感想などを以下に記すこと．
所要時間： （1）時間
今回の課題では、構造体というものについて勉強することができた。構造体とはいくつかの変数をまとめたものであり、それほど難しくはなかったが、まだ理解が不十分のためもっと課題の問題をこなしていきたい。中間テストも終わり、これから期末に向かっていく中で、今回の構造体と、前回のポインタは少し苦手なため、特に力を入れて復習していきたい、



