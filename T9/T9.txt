---------------------------------------------------------
[T9] 第8章 ポインタ に関する考察・感想用テンプレート
---------------------------------------------------------

課題： T9
学生番号： 37022503
氏名：山形隼士 
作成日： 6/14


（注意）【以下は確認の上，消去してからレポート提出を行って下さい】
  ・ プログラミングの力がつかないため，他の学生・先輩などが作成したプ
       ログラムをコピーすることは厳禁です．

  ・ 各課題に対して，
      - 学習内容（どのようなプログラムを作成したか，この課題を通して学んだ事項，
           作成中に間違えた箇所，など）
      - 結果（結果を報告する．実行結果も貼り付けよ）
      - 習得した内容，苦労した点，工夫した点，考察など
     について必ず記すこと．

  ・ プログラムが完成次第，1問ごとにその都度以下のレポート欄に
       記入して下さい．あとからまとめて記そうとすると，書くべき事項を
       忘れることが多くあります．

-----------------------------------------------
(T9_1)

学習内容：
 [リスト 8.1] を参考に, 下のプログラムに文を追加して, 変数 a, b, c のアドレスを表示するようにせよ.

※ アドレスは, printf の書式指定を %p とすることで，16進数で表示される．
#include <stdio.h>

int main (void)
{
   int a = 1234;
   int b = 5678;
   int c = 7777;

   /* ここに a, b, c のアドレスを表示する文を追加 */

   return 0;
}
次に, プログラムを実行して表示されるアドレスを記録し, どのアドレスにどの変数が格納されその値がいくらであるかを示す図を, 下の例に習って作成し, レポートに記せ.
(例) WWW からコピー＆ペーストして用いよ.
アドレス         内容
           ├──────┤
3221224176 │   c        │
           ├            ┤
3221224177 │  7777      │
           ├            ┤
3221224178 │            │
           ├            ┤
3221224179 │            │
           ├──────┤
3221224180 │   b        │
           ├            ┤
3221224181 │  5678      │
           ├            ┤
3221224182 │            │
           ├            ┤
3221224183 │            │
           ├──────┤
3221224184 │   a        │
           ├            ┤
3221224185 │  1234      │
           ├            ┤
3221224186 │            │
           ├            ┤
3221224187 │            │
           ├──────┤

結果：
$ ./a.exe
Address = 0xffffcbfc
Address = 0xffffcbf8
Address = 0xffffcbf4

習得した内容・反省・考察など：
アドレス         内容
           ├──────┤
0xffffcbf4 │   a        │
           ├            ┤
0xffffcbf5 │  1234      │
           ├            ┤
0xffffcbf6 │            │
           ├            ┤
0xffffcbf7 │            │
           ├──────┤
0xffffcbf8 │   b        │
           ├            ┤
0xffffcbf9 │  5678      │
           ├            ┤
0xffffcbfa │            │
           ├            ┤
0xffffcbfb │            │
           ├──────┤
0xffffcbfc │   c        │
           ├            ┤
0xffffcbfd │  7777      │
           ├            ┤
0xffffcbfe │            │
           ├            ┤
0xffffcbff │            │
           ├──────┤

-----------------------------------------------
(T9_2) 

学習内容：
前問(T9_1)で示されたプログラムに対して，[リスト 8.2] を参考にポインタ pa, pb, pc を定義せよ( 例えば，int *pa; )．次に，それぞれに対して変数 a, b, c のアドレスを代入した上でそれらを表示せよ．

結果：
$ ./a.exe
Address = 0xffffcbe4
Address = 0xffffcbe0
Address = 0xffffcbdc

習得した内容・反省・考察など：
ポインタを定義し、その中にそれぞれの変数のアドレスを代入して表示することができた。

-----------------------------------------------
(T9_3) 

学習内容：
 [リスト 8.3][リスト 8.4][リスト 8.5] のプログラムを実際に実行し，それぞれについてアドレスの変化を観察し，なぜそのような結果が表示されるのかを説明せよ．プログラムの提出はいずれかひとつでよい．なお，sizeof 演算子はデータのバイト数を返すもので，3.2.4項に説明がある．
ただし，printf の書式を "%zd" に変更するか，もしくは sizeof(int) を int型にキャストすること → 教科書の正誤表参照．

結果：
0x16d8772fb 0x16d8772fc 0x16d8772fd 0x16d8772fe 0x16d8772ff  size = 1

0x16fd872f8 0x16fd872fc 0x16fd87300 0x16fd87304 0x16fd87308  size = 4

0x16f80b2f4 0x16f80b300 0x16f80b30c 0x16f80b318 0x16f80b324  size = 4

習得した内容・反省・考察など：
リスト3のアドレスが一つずつ変化している理由は、ポインタがchar型であるからであり、char型のポインタはポインタを一つずつ動かす。リスト4のアドレスが四つずつ変化している理由は、ポインタがint型であるからであり、int型のポインタはポインタを四つずつ動かす。リスト5のアドレスが12ずつ移動している理由はint型のポインタの値を表示した後に、＋3しているからである。

-----------------------------------------------
(T9_4) 

学習内容：
[リスト 8.6] のプログラムを実行し，ポインタに対する加算や，ポインタ同士の減算がどのような計算を行うことになるか説明せよ．
ただし，printf の書式を "%td" に変更するか，もしくは減算の結果を int型にキャストすること → 教科書の正誤表参照．

結果：
a2-a1=5
a3-a1=7
a3-a2=2

習得した内容・反省・考察など：
ポインタに値を足し算するということは、配列の先頭のアドレスに値を足し算するということであり、ポインタ同士の計算は、配列の要素間の距離を求めるという計算と同じ意味を持つ。

-----------------------------------------------
(T9_5) 

学習内容：
下のプログラムを実行した上で，int a = ...; から printf 文までの各行について，それぞれ何が行われているかをレポートにて説明せよ．

#include <stdio.h>

int main (void)
{
   int a = 1234;
   int x;
   int *p;

   p = &a;

   x = *p + 4321;

   printf("%d %d \n", *p, x);

   return 0;
}

結果：
1234 5555

習得した内容・反省・考察など：
int a = 1234;//aという変数に1234という値を代入している。
   int x;//整数型の変数xを定義
   int *p;//ポインタ変数pを定義

   p = &a;//ポインタに変数xのアドレス(1234)を代入

   x = *p + 4321;//変数xにポインタpが差している変数の値(1234)と4321を足したものを代入

   printf("%d %d \n", *p, x);//pとxの値を表示。


-----------------------------------------------
(T9_6) 

学習内容：
 [リスト 8.8]および[リスト 8.9]を入力した上で実行した上で，ポインタと配列の類似点および相違点についてレポートにて説明せよ．[リスト 8.9]のプログラムを提出すること．

結果：
合計= 55

習得した内容・反省・考察など：
配列とポインタは、割り当てられたメモリ領域が途中で買えわ絵うことがないということが類似点である。一方、配列は定義された段階で実際のメモリ領域を確保するが、ポインタは定義された段階では実際の領域を確保しないという点が違う点である。

-----------------------------------------------
[T9] 全体に対する感想などを以下に記すこと．
所要時間： （3）時間
今回の課題ではポインタというものについて勉強することができた。ポインタが具体的にどのようなものなのか理解はしていなかったが、主にメモリに関連していることだということがわかり、先学期に履修したコンピュータアーキテクチャに考えが利用できると感じた。


