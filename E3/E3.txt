---------------------------------------------------------
[E3] 第4章 制御の流れ(2) に関する考察・感想用テンプレート
---------------------------------------------------------

課題： E3
学生番号： 
氏名： 
作成日： 


（注意）【以下は確認の上，消去してからレポート提出を行って下さい】
  ・ プログラミングの力がつかないため，他の学生・先輩などが作成したプ
       ログラムをコピーすることは厳禁です．

  ・ 各課題に対して，
      - 学習内容（どのようなプログラムを作成したか，この課題を通して学んだ事項，
           作成中に間違えた箇所，など）
      - 結果（結果を報告する．実行結果も貼り付けよ）
      - 習得した内容，苦労した点，工夫した点，考察など
     について必ず記すこと．

  ・ プログラムが完成次第，1問ごとにその都度以下のレポート欄に
       記入して下さい．あとからまとめて記そうとすると，書くべき事項を
       忘れることが多くあります．

-----------------------------------------------
(E3_1)

学習内容：
キーボードから正の整数を受け取り，それを n とする． [リスト 4.10]を参考にして， n 未満の正の整数のうち，3の倍数であるものの和を求めるプログラムを for 文を用いて作成せよ． ただし，本問では if 文を用いないこととし，for 文のカウンタ変数を 3 ずつ増やすこととする （カウンタ変数を i とするとき，その更新は i++ 以外にもできることを習得することが目的である．カウンタ変数 i に a を加算するには i += a とすればよい）．

結果：
100未満の整数のうち、3の倍数であるものの総和は1683

習得した内容・反省・考察など：
n未満の整数の中で、3の倍数であるものの総和を求めることができた。相和を求めるときには、total = total + iとすれば良いことがわかったため、これからの課題でも相和を求めるときには活用していきたい。

-----------------------------------------------
(E3_2) 

学習内容：
 [リスト 4.10]を参考にして，1 以上 200以下の整数の和を求めるプログラムを for 文を用いて作成せよ．さらに，これを変更して以下のプログラムを作成せよ． 
キーボードから 20000 以下の正の整数 max を受け取る． 1 以上 n 以下の整数の和が max より大きいような最小の n を求め，それに対する total = 1 + … + n の値とともに表示するプログラムを作成せよ（数列の和の公式を用いないこと）．本問では，max と total に関する条件式が真となった時点で 4.3.5項で説明される break 文を用いて for 文のループを抜けることとする． 
（for 文のループの中および外でカウンタ変数 i と total の値を printf 文で表示してみると理解の助けとなる） 
（上記の n は求める数を表すために用いた記号にすぎないため，プログラムの中で変数 n を用いる必要はないことに注意せよ）

結果：
整数を入力してください---->5
変数->3
合計->6

整数を入力してください---->6
変数->4
合計->10

整数を入力してください---->60
変数->11
合計->66

整数を入力してください---->1000
変数->45
合計->1035

整数を入力してください---->5000 
変数->100
合計->5050

習得した内容・反省・考察など：
今回の課題でも、総和を求めることになったため、先ほどの課題で勉強したtotalを使って求めることができた。また、if文を使って、条件に合わない入力を弾くことができた。

-----------------------------------------------
(E3_3) 

学習内容：
[リスト 4.14]を参考にして，1 以上 200以下の整数の和を求めるプログラムを while 文を用いて作成せよ．さらに，これを変更して以下のプログラムを作成せよ． 
キーボードから 20000 以下の正の整数 max を受け取る． 1 以上 n 以下の整数の和が max より大きいような最小の n を求め，それに対する total = 1 + … + n の値とともに表示するプログラムを while 文を用いて作成せよ（数列の和の公式を用いないこと）． 
ただし，本問では break 文を用いず，代わりに，while 文における境界条件を適切に与えること． 
while 文のループの中および外でカウンタ変数 i と total の値を表示するとよい．while 文を抜けた時点での i の値と，正解の n の値が合わない場合はその理由を考えた上で，値の調整を行うこと．

結果：
整数を入力してください---->5
合計6
変数n=3

習得した内容・反省・考察など：
E3_2と同様の内容をwhile文を用いて記述する課題であった。プログラム内にもコメントで書いたが、while文を抜ける前に、totalにiを足し算しているのだが、その後に一つiの値を増やしてしまっていることが表示が一つ大きくなっている原因と考えられる。そのため、数字を表示する部分に少し修正を加えた。

-----------------------------------------------
(E3_4) 

学習内容：
大学生協アプリに5000円チャージした．昼食は毎日とるが，いつもランチセット390円を購入する．日々のカード残額を表示するプログラムを while 文を用いて作成せよ．ただし，残額がランチセットの値段を下回った時点で表示を終了する．本問では break 文を使用せず，while 文の条件で終了判定すること

結果：
チャージ額:5000円
1日目残高 4610円
2日目残高 4220円
3日目残高 3830円
4日目残高 3440円
5日目残高 3050円
6日目残高 2660円
7日目残高 2270円
8日目残高 1880円
9日目残高 1490円
10日目残高 1100円
11日目残高 710円
残高が1000円を切りました。チャージしてください。
12日目残高 320円
残高が1000円を切りました。チャージしてください。

習得した内容・反省・考察など：
課題を作成した後に、チャージされている金額が1000円を下回った場合、警告を出すように改良した。while文の条件の部分で少し苦戦してしまった。

-----------------------------------------------
(E3_5) 

学習内容：
for 文の 2 重ループを使って，掛け算の九九の表を下記のように表示するプログラムを作成せよ．なお，printf の書式は %2d を使用せよ（%d，%-2d，%02d, %4d についても場合も試し，違いを確認せよ．これらの書式は右詰め，左詰め，ゼロ埋めなどを表す）．

結果：
1  2  3  4  5  6  7  8  9 
2  4  6  8 10 12 14 16 18 
3  6  9 12 15 18 21 24 27 
4  8 12 16 20 24 28 32 36 
5 10 15 20 25 30 35 40 45 
6 12 18 24 30 36 42 48 54 
7 14 21 28 35 42 49 56 63 
8 16 24 32 40 48 56 64 72 
9 18 27 36 45 54 63 72 81 

習得した内容・反省・考察など：
特に苦戦することなく作成することができた。ゼロ埋めが十個するまでどのようなものなのかわからなかったが、実行してみて01のように0を追加する動作であるということがわかった。

-----------------------------------------------
(E3_6) 

学習内容：
 a を10以下の正の整数，b を20以下の正の整数とする．キーボードから正の整数 n を受け取る．a + b が n 未満であるような a と b の組が何個あるかを求めて表示せよ． ただし，(a, b) = (1, 2) と (2, 1) は別の組とみなす． 例えば，n = 6 のとき 10 個，n = 15 のとき 85個存在する． 
（動作を確認する上では，条件を満たす ( a, b ) を printf で表示して確認することが有用である）

結果：
整数を入力してください---->6
a+bが6未満であるようなaとbの組は10個あります。

整数を入力してください---->50
a+bが50未満であるようなaとbの組は200個あります。

習得した内容・反省・考察など：
for文を使った二重ループの中にif文を追加することでうまく表現することができた。<=と<の違いに苦戦してしまったため、これからはプログラムを作成するときに必ず吟味して作成していきたい。

-----------------------------------------------
(E3_7) 

学習内容：
下の例題プログラムを入力, コンパイル, 実行し, どのような結果が得られるか見よ. 次に, このプログラムを書き換えて, 1≤x≤4, 0≤y≤2, 4≤z≤6 なる 3 つの整数 x, y, z の全組合せに対して xy+z2 を計算して表示するプログラムを作成せよ.

 #include <stdio.h>

 int main(void)
 {
    int x, y, z;

    for (x=1; x<=3; x++) {
       for (y=1; y<=3; y++) {
	  for (z=1; z<=3; z++) {
	     printf("%d + %d + %d = %d\n", x, y, z, x+y+z);
	  }
       }
    }

    return 0;
 }

結果：
1 * 0 + 16 = 16
1 * 0 + 25 = 25
1 * 0 + 36 = 36
1 * 1 + 16 = 17
1 * 1 + 25 = 26
1 * 1 + 36 = 37
1 * 2 + 16 = 18
1 * 2 + 25 = 27
1 * 2 + 36 = 38
2 * 0 + 16 = 16
2 * 0 + 25 = 25
2 * 0 + 36 = 36
2 * 1 + 16 = 18
2 * 1 + 25 = 27
2 * 1 + 36 = 38
2 * 2 + 16 = 20
2 * 2 + 25 = 29
2 * 2 + 36 = 40
3 * 0 + 16 = 16
3 * 0 + 25 = 25
3 * 0 + 36 = 36
3 * 1 + 16 = 19
3 * 1 + 25 = 28
3 * 1 + 36 = 39
3 * 2 + 16 = 22
3 * 2 + 25 = 31
3 * 2 + 36 = 42
4 * 0 + 16 = 16
4 * 0 + 25 = 25
4 * 0 + 36 = 36
4 * 1 + 16 = 20
4 * 1 + 25 = 29
4 * 1 + 36 = 40
4 * 2 + 16 = 24
4 * 2 + 25 = 33
4 * 2 + 36 = 44

習得した内容・反省・考察など：
for文を使った三重ループを用いることで、プログラムを作成することができたループを多く作る際には、必ず数値がどこで増減しているのか確認しながら作成していきたい。

-----------------------------------------------
(E3_8) 

学習内容：
キーボードから正の整数 n を受け取り, a2+b2=c2, a<b を満たすような n 以下の正の整数の組 (a, b, c) がいくつあるかを求めて表示するプログラムを作成せよ．もっとも素朴なやり方は n 以下の整数の組について総当たりで調べることである．その上で，無駄な場合（たとえばa>cとなるようなもの）を省いて計算量を削減する工夫を加えることが望ましい．

n=15 のとき 4 個，n=250 のとき 165 個となることを確認せよ．

結果：
整数を入力してください--->15
a2+b2=c2、a<bを満たすような15以下の正の整数の組は4個あります。

整数を入力してください--->250
a2+b2=c2、a<bを満たすような250以下の正の整数の組は165個あります。

習得した内容・反省・考察など：
for文を使った三重ループの中にif文を追加することでうまくプログラムを作成することができた。==を=としてしまうなど、凡ミスが非常に目立っているので、コードを書くときには、もっと気を配って書いていきたい。

-----------------------------------------------
(E3_9) 

学習内容：
 [リスト 4.12]を入力し，実行せよ．さらに，それを参考にして, 以下のプログラムのような数当てゲームを作成せよ．

プログラム内で，適当な整数を int 型変数 num に代入し，これを数当てゲームの正解とする．
ユーザの当初の持ち点は5点とし，1回不正解となるごとに1点が減点される．
ユーザにキーボードから整数を入力させ，それが正解であるか，正解より大きいか，小さいかを判定する．
正解より大きい場合，「大きいです！」と表示する．
正解より小さい場合，「小さいです！」と表示する．
それ以外の場合，「大正解，■点です！」と表示した上で（■は適切な整数），その時点でキーボードからの入力を終了する．
不正解の場合は再度キーボードから入力させるが，不正解の判定が5回行われた時点でキーボードからの入力を終了する．
正解できずに終わった場合は「0点です」と表示する（表示は for 文によるループの外側で行うこと．得点を表す変数の値により，正解したか否かを判定できる）．

結果：
1回目の数字をどうぞ  ?  >>>200
小さいです!
2回目の数字をどうぞ  ?  >>>2983 
小さいです!
3回目の数字をどうぞ  ?  >>>2985
******************
* 大正解 3点です *
******************

1回目の数字をどうぞ  ?  >>>3
小さいです!
2回目の数字をどうぞ  ?  >>>4
小さいです!
3回目の数字をどうぞ  ?  >>>5
小さいです!
4回目の数字をどうぞ  ?  >>>5
小さいです!
5回目の数字をどうぞ  ?  >>>6
小さいです!
0点です。もう一回チャレンジしてね!

習得した内容・反省・考察など：
５回の思考をfor文の中で処理した後0点を表示するようなコードを書くことでうまく動作させることができた。値のズレなどに苦戦してしまったため<=と<の違いなどを今一度確認してコードを書いていきたい。

-----------------------------------------------
(E3_10) 

学習内容：
以下のプログラムについて考える． (1)まず， （画面上でプログラムを読むことで）表示される結果(値)を予想し，理由とともにレポートに記せ． (2) その後，コンパイル・実行をすることで確認し，予想が正しくなかった場合はその理由をレポートに記せ．

#include <stdio.h>

int main( void ){

    int x, y;
    int i;

    x = 0;
    y = 1;
    for( i = 2; i < 10; i += 2 ){
          x += i;
          y *= i;
    }

    printf("x = %d, y = %d\n", x, y);

    x = 0;
    y = 1;
    for( i = 2; i < 10; i += 2 )
          x += i;
          y *= i;

    printf("x = %d, y = %d\n", x, y);

   return 0;
}

結果：
x = 20, y = 384
x = 20, y = 10

習得した内容・反省・考察など：
予想通り、二つ目のfor文に{}がついていなかったため、下の一行目であるx += 1のみforループの中で実行されていることがわかった。

-----------------------------------------------
(E3_11*) 

学習内容：
キーボードからまず2種類の文字 s と t を，次に正の整数 n と m を受け取ると，下のサンプルのように，2 種類の文字を n x m 個(縦に n 個，横に m 個)並べたパターンを表示するプログラムを作成せよ．文字の並べ方は下のサンプルにこだわらないので，自由に面白いものを作成せよ．でき上がったプログラムを一つだけ提出せよ．入力部分については以下のコードを利用してよい．正常に動作すればもちろんこれ以外の書き方でもよい．

結果：
ababababa
babababab
ababababa
babababab
ababababa

習得した内容・反省・考察など：
forループを二つ使った二重ループの中にif文を入れることで奇数行目と偶数行目で順番を逆にすることができた。

-----------------------------------------------
[E3] 全体に対する感想などを以下に記すこと．
所要時間：(4)時間
今回の課題ではwhileループと、for文を複数個使った多重ループについて勉強した。複数個の数字を増減させるような動作を作成するときにはfor文の多重ループを使ってプログラミングしていきたいと感じた。また、多重ループの中にif文を追加することでさらに複雑な動作をさせることができた。しかし、条件がうまく指定できていないと意図しない動作になってしまうため、条件の吟味は今以上にもっと徹底していきたい。

